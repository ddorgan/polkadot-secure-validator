---
# tasks file for vpnpeer-setup
- name: get linux version
  command: uname -r
  register: uname
  changed_when: False

- name: install linux-headers
  apt:
    name: linux-headers-amd64 
    update_cache: yes

- name: Add unstable repository
  apt_repository:
    repo: "deb http://deb.debian.org/debian/ unstable main"
    state: present
    update_cache: yes

- name: pin priority for unstable packages (debian)
  become: yes
  shell: |
    printf 'Package: *\nPin: release a=unstable\nPin-Priority: 90\n' \
      > /etc/apt/preferences.d/limit-unstable

- name: install build-essential 
  apt:
    name: build-essential 


- name: install wireguard
  apt:
    name: wireguard

- name: generate wireguard private key
  shell: |
    dpkg-reconfigure wireguard-dkms 

- name: link headers for wireguard build
  become: yes
  file:
    dest: /lib/modules/4.19.0-6-cloud-amd64/build
    src: /usr/src/linux-headers-4.19.0-6-amd64
    owner: root
    group: root
    state: link
    force: yes

- name: install wireguard
  apt:
    name: wireguard

- name: check if privatekey already exists
  stat:
    path: /etc/wireguard/privatekey
  register: privatekey_file

- name: generate wireguard private key
  shell: |
    set -o pipefail
    wg genkey | tee /etc/wireguard/privatekey
    chmod 600 /etc/wireguard/privatekey
  args:
    executable: /bin/bash
  register: private_key_result
  when: not privatekey_file.stat.exists

- name: get existing private key file content
  shell: |
    set -o pipefail
    cat /etc/wireguard/privatekey
  args:
    executable: /bin/bash
  register: privatekey_file_content
  when: privatekey_file.stat.exists
  changed_when: false

- name: check if publickey already exists
  stat:
    path: /etc/wireguard/publickey
  register: publickey_file

- name: generate wireguard public key
  shell: |
    set -o pipefail
    wg pubkey | tee /etc/wireguard/publickey
    chmod 600 /etc/wireguard/publickey
  args:
    executable: /bin/bash
    stdin: "{{ private_key_result.stdout }}"
  register: public_key
  when: not publickey_file.stat.exists

- name: get existing public key file content
  shell: |
    set -o pipefail
    cat /etc/wireguard/publickey
  args:
    executable: /bin/bash
  register: publickey_file_content
  when: publickey_file.stat.exists
  changed_when: false

- name: save private_key as host fact
  set_fact:
    vpn_private_key: "{{ private_key_result.stdout if not privatekey_file.stat.exists else privatekey_file_content.stdout }}"

- name: save public_key as host fact
  set_fact:
    vpn_public_key: "{{ public_key.stdout if not publickey_file.stat.exists else publickey_file_content.stdout }}"
